#!/bin/bash

# if first argument is -rc or --restart-container, stop the main process
if [[ "$1" == "-rc" || "$1" == "--restart-container" ]]; then
    echo "Restarting codec container..."
    rm -rf /tmp/*
    sudo pkill -f nodemon -9
    exit 0
fi


# if first argument is -r or --restart, restart the code-server process
if [[ "$1" == "-r" || "$1" == "--restart" ]]; then
    echo "Restarting codeccode-server..."
    touch /home/codec/ws/.codec/code-server.yaml
    exit 0
fi

# if first argument is -l or --log, print a logfile
if [[ "$1" == "-l" || "$1" == "--log" ]]; then
    LOGNAME=$2
    if [ -z "$2" ]; then
        LOGNAME="boot"
    fi
    echo "Logs of '/home/codec/ws/.codec/logs/$LOGNAME_*.log' ..."
    cat /home/codec/ws/.codec/logs/$LOGNAME_*.log
    exit 0
fi

# if first argument is -w or --welcome, print welcome message and exit
if [[ "$1" == "-w" || "$1" == "--welcome" ]]; then
    echo "                                                 "
    echo "                           ▄▄                    "
    echo "  ▄▄█▀▀▀█▄█              ▀███           ▄▄█▀▀▀█▄█"
    echo "▄██▀     ▀█                ██         ▄██▀     ▀█"
    echo "██▀       ▀ ▄██▀██▄   ▄█▀▀███   ▄▄█▀████▀       ▀"
    echo "██         ██▀   ▀██▄██    ██  ▄█▀   ███         "
    echo "█▓▄        ██     ███▓█    █▓  ▓█▀▀▀▀▀▀▓▄        "
    echo "▀▓█▄     ▄▀██     ▓█▀▓█    █▓  ▓█▄    ▄▓█▄     ▄▀"
    echo "▓▓▓        ▓█     ▓▓▓▓▓    ▓▓  ▓▓▀▀▀▀▀▀▓▓        "
    echo "▒▓▓▒     ▓▀▓▓▓   ▓▓▓▀▒▓    ▓▒  ▒▓▓    ▒▓▓▒     ▓▀"
    echo "  ▒ ▒ ▒ ▒▓  ▒ ▒ ▒ ▓  ▒ ▒ ▒ ▓ ▒  ▒ ▒ ▒▒  ▓ ▒ ▒ ▒▓ "
    echo "  ▒ ▒   ▒▒  ▒     ▒        ▓    ▒    ▒  ▒ ▒    ▒ "
    echo "  ▒      ▒        ▒        ▒    ▒       ▒        "
    echo "                  ▒        ▒        by majo418   "
    echo " Welcome to CodeC          ▒      & CoreUnit.NET "
    echo "                                                 "
    exit 0
fi

# if first argument is -rh or --rawhash
if [[ "$1" == "-rh" || "$1" == "--rawhash" ]]; then
    # print error if no second argument
    if [ -z "$2" ]; then
        echo "No hash as second argument!"
        exit
    fi
    # print error if hash is shorter than 32 characters
    if [ ${#2} -lt 32 ]; then
        echo "Hash is too short!"
        exit
    fi

    HASH=$2
    HASH=${HASH:0:64}

    printf "Set new hash: \"%s\"\n" "$HASH"

    sed -i '/^hashed-password:/d' /home/codec/ws/.codec/code-server.yaml
    echo -n "hashed-password: $HASH" >> /home/codec/ws/.codec/code-server.yaml

    echo "Hash set!"
    exit 0
fi

PASSWORD="$2"
# if the first argument is -i then ask for a password in a prompt and save it in the first argument
if [[ "$1" == "-i" || "$1" == "--interactive" ]]; then
    echo -n "Enter password: "
    read -s PASSWORD
    echo
    echo -n "Enter password again: "
    read -s RE_PASSWORD
    echo
    if [ "$PASSWORD" != "$RE_PASSWORD" ]; then
        echo "Passwords do not match"
        exit 1
    fi
fi

# if first argument is -p, --password, -i or --interactive, set the password
if [[ "$1" == "-p" || "$1" == "--password" || "$1" == "-i" || "$1" == "--interactive" ]]; then
    # print error if no $PASSWORD
    if [ -z "$PASSWORD" ]; then
        echo "No password given!"
        exit 1
    fi
    # print error if password is shorter than 8 characters
    if [ ${#PASSWORD} -lt 8 ]; then
        echo "Password is too short!"
        exit 1
    fi
    echo "Set new password..."
    codec -rh "$(sha256sum2 "$PASSWORD")"
    echo "New password set!"
    exit 0
fi


echo "          / / / / /        "
echo "         C O D E C         "
echo "        / / / / /          "
echo "Usage: $0 [OPTION]"
echo "Options:"
echo "  -h,  --help: print this help and exit"
echo "  -i,  --interactive: start interactive password prompt"
echo "  -p,  --password <password>: set password "
echo "  -rh, --rawhash <passhash>: saves a raw password hash"
echo "  -w,  --welcome: print welcome message and exit"
echo "  -r,  --restart: restart the code-server process"
echo "  -rc, --restart-container: restart the codec container"
echo "  -l, --log: print a logfile (example: boot, dockerd)"
echo ""
echo "   by majo418"
echo "      & CoreUnit.NET"
